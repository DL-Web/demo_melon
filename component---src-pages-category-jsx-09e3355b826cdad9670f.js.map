{"version":3,"file":"component---src-pages-category-jsx-09e3355b826cdad9670f.js","mappings":"+KAIaA,EAAiB,SAACC,GAC7B,OAAO,QAACC,EAAD,KAAWD,EAAME,UAGpBD,GAAQ,uJAMHE,EAAAA,EAAAA,QANG,oFAYUA,EAAAA,EAAAA,QAZV,6C,qHCHDC,EAAe,SAACJ,GAC3B,OACE,QAACK,EAAD,MACE,QAAC,KAAD,CAAMC,GAAIN,EAAMO,OACd,oBAAOP,EAAMQ,UACb,kBAAKR,EAAMS,YAMbJ,GAAS,sDACOF,EAAAA,EAAAA,OADP,mYA6BWA,EAAAA,EAAAA,QA7BX,iBAgCIA,EAAAA,EAAAA,QAhCJ,cAmCIA,EAAAA,EAAAA,QAnCJ,wEA4CWA,EAAAA,EAAAA,QA5CX,iBA+CIA,EAAAA,EAAAA,QA/CJ,cAkDIA,EAAAA,EAAAA,QAlDJ,SChBFO,EAAe,CAC1B,CAAEH,KAAM,IAAKE,QAAS,UAAWD,QAAS,WAAYG,IAAK,OAC3D,CAAEJ,KAAM,IAAKE,QAAS,UAAWD,QAAS,WAAYG,IAAK,OAC3D,CAAEJ,KAAM,IAAKE,QAAS,UAAWD,QAAS,WAAYG,IAAK,OAC3D,CAAEJ,KAAM,IAAKE,QAAS,UAAWD,QAAS,WAAYG,IAAK,OAC3D,CAAEJ,KAAM,IAAKE,QAAS,UAAWD,QAAS,WAAYG,IAAK,QCGtD,IAAMC,EAAkB,WAC7B,OACE,QAACC,EAAD,CAAUC,UAAU,mBAClB,QAAC,IAAD,CAAgBZ,QAAQ,cACxB,QAACa,EAAD,KACGL,EAAaM,KAAI,YAAsC,IAAnCT,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASE,EAAU,EAAVA,IAC3C,OACE,QAACP,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTE,IAAKA,UASbE,GAAQ,8DACYV,EAAAA,EAAAA,OADZ,oBAKRY,GAAK,wK,qECpBX,UARqB,WACnB,OACE,QAAC,IAAD,CAAeE,UAAU,SAASC,YAAY,aAC5C,QAAC,IAAD","sources":["webpack://melon/./src/components/heading/sectionHeading.jsx","webpack://melon/./src/components/card/categoryCard.jsx","webpack://melon/./src/utils/categoryList.jsx","webpack://melon/./src/components/wrapper/categoryWrapper.jsx","webpack://melon/./src/pages/category.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Color } from \"../../styles/color\";\n\nexport const SectionHeading = (props) => {\n  return <SHeading>{props.heading}</SHeading>;\n};\n\nconst SHeading = styled.h2`\n  font-family: \"Titillium Web\", sans-serif;\n  font-weight: 700;\n  display: inline-flex;\n  align-items: center;\n  line-height: 1;\n  color: ${Color.primary};\n  &::before {\n    content: \"\";\n    width: 8px;\n    height: 8px;\n    display: inline-block;\n    background-color: ${Color.primary};\n    border-radius: 100vh;\n    margin-right: 1rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Color } from \"../../styles/color\";\nimport { Link } from \"gatsby\";\n\nexport const CategoryCard = (props) => {\n  return (\n    <SGridItem>\n      <Link to={props.href}>\n        <span>{props.enLabel}</span>\n        <h4>{props.jpLabel}</h4>\n      </Link>\n    </SGridItem>\n  );\n};\n\nconst SGridItem = styled.div`\n  border: 1px solid ${Color.border};\n  border-radius: 8px;\n  text-align: center;\n  transition: all 0.2s;\n  z-index: 1;\n  a {\n    padding: 1rem 0;\n    display: flex;\n    flex-direction: column;\n    text-decoration: none;\n    span {\n      font-size: 0.9rem;\n      font-family: \"Titillium Web\", sans-serif;\n      line-height: 1;\n      transition: all 0.2s;\n    }\n    h4 {\n      margin-top: 4px;\n      font-size: 1rem;\n      line-height: 1;\n      font-weight: 500;\n      transition: all 0.2s;\n    }\n  }\n\n  /* hover */\n  @media screen and (min-width: 1025px) {\n    &:hover {\n      border: 1px solid ${Color.primary};\n      a {\n        span {\n          color: ${Color.primary};\n        }\n        h4 {\n          color: ${Color.primary};\n        }\n      }\n    }\n  }\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    &:active {\n      border: 1px solid ${Color.primary};\n      a {\n        span {\n          color: ${Color.primary};\n        }\n        h4 {\n          color: ${Color.primary};\n        }\n      }\n    }\n  }\n`;\n","export const CategoryList = [\n  { href: \"/\", jpLabel: \"製品カテゴリA\", enLabel: \"category\", key: \"001\" },\n  { href: \"/\", jpLabel: \"製品カテゴリB\", enLabel: \"category\", key: \"002\" },\n  { href: \"/\", jpLabel: \"製品カテゴリC\", enLabel: \"category\", key: \"003\" },\n  { href: \"/\", jpLabel: \"製品カテゴリD\", enLabel: \"category\", key: \"004\" },\n  { href: \"/\", jpLabel: \"製品カテゴリE\", enLabel: \"category\", key: \"005\" },\n];\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Color } from \"../../styles/color\";\n\nimport { SectionHeading } from \"../heading/sectionHeading\";\nimport { CategoryCard } from \"../card/categoryCard\";\nimport { CategoryList } from \"../../utils/categoryList\";\n\nexport const CategoryWrapper = () => {\n  return (\n    <SWrapper className=\"caegoryWrapper\">\n      <SectionHeading heading=\"CATEGORY\" />\n      <SGrid>\n        {CategoryList.map(({ href, enLabel, jpLabel, key }) => {\n          return (\n            <CategoryCard\n              href={href}\n              enLabel={enLabel}\n              jpLabel={jpLabel}\n              key={key}\n            />\n          );\n        })}\n      </SGrid>\n    </SWrapper>\n  );\n};\n\nconst SWrapper = styled.section`\n  border-top: 1px solid ${Color.border};\n  padding: 2rem 0;\n`;\n\nconst SGrid = styled.div`\n  margin-top: 2rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(min(320px, 100%), 1fr));\n  gap: 8px;\n`;\n","import React from \"react\";\n\nimport { DefaultLayout } from \"../components/layout/defaultLayout\";\nimport { CategoryWrapper } from \"../components/wrapper/categoryWrapper\";\n\nconst CategoryPage = () => {\n  return (\n    <DefaultLayout pageTitle=\"カテゴリ一覧\" headerTitle=\"CATEGORY\">\n      <CategoryWrapper />\n    </DefaultLayout>\n  );\n};\n\nexport default CategoryPage;\n"],"names":["SectionHeading","props","SHeading","heading","Color","CategoryCard","SGridItem","to","href","enLabel","jpLabel","CategoryList","key","CategoryWrapper","SWrapper","className","SGrid","map","pageTitle","headerTitle"],"sourceRoot":""}